<?php
// Функции работы с датами

/*******************************************************************************
	Функция смещает дату по старому стилю на заданное количество дней
*******************************************************************************/  
function bg_ortev_shiftDate($date, $dd) {
	list($y, $m, $d) = explode('-', $date);
	
	if ($dd < 0) {
		while ($d + $dd < 1) {
			$m--;
			$dd = bg_ortev_numDays($m, $y)+ $dd;
			if ($m < 1) {
				$m = 12;
				$y--;
			}
		}
	} elseif ($dd > 0) {
		while ($d + $dd > bg_ortev_numDays($m, $y)) {
			$m++;
			$dd = $dd - bg_ortev_numDays($m, $y);
			if ($m > 12) {
				$m = 1;
				$y++;
			}
		}
	}
	$d = $d + $dd;
	return bg_ortev_date ($y, $m, $d);
}


/*******************************************************************************
	Функция преобразует дату по новому стилю в дату по старому стилю
*******************************************************************************/  
function bg_ortev_oldDate($date) {
	list($y, $m, $d) = explode('-', $date);
	
	$dd = -bg_ortev_dd($m<3?$y-1:$y);
	while ($d + $dd < 1) {
		$m--;
		$dd = bg_ortev_numDays($m, $y)+ $dd;
		if ($m < 1) {
			$m = 12;
			$y--;
		}
	}
	$d = $d + $dd;
	return bg_ortev_date ($y, $m, $d);
}

/*******************************************************************************
	Функция возвращает количество дней в месяце по старому стилю
*******************************************************************************/  
function bg_ortev_numDays ($month, $year) {
	$dim = array(31,28,31,30,31,30,31,31,30,31,30,31);
	return ($month == 2 && bg_ortev_isLeapOld($year)) ? 29 : $dim[(int)$month-1];
}

/*******************************************************************************
	Функция возвращает количество дней между датами по новому и старому стилю
	действует с 1 марта указанного года по новому стилю
*******************************************************************************/  
function bg_ortev_dd($year) {
	return ($year-$year%100)/100 - ($year-$year%400)/400 - 2;
}

/*******************************************************************************
	Функция определяет день Пасхи на заданный год по старому стилю
*******************************************************************************/
function bg_ortev_easter($year) {
	$a=((19*($year%19)+15)%30);
	$b=((2*($year%4)+4*($year%7)+6*$a+6)%7);
	if ($a+$b>9) {
		$day=$a+$b-9;
		$month=4;
	} else {
		$day=22+$a+$b;
		$month=3;
	}
	return bg_ortev_date ($year, $month, $day);
}

/*******************************************************************************
	Функции определяют является ли указанный год високосным
*******************************************************************************/  
// По Григорианскому календарю
function bg_ortev_isLeap($year) {
	return (!($year % 4) && ($year % 100) || !($year % 400));
}
// По Юлианскому календарю
function bg_ortev_isLeapOld($year) {
	return !($year % 4);
}

/*******************************************************************************
	Функции формирует дату заданного формата
*******************************************************************************/  
function bg_ortev_date ($year, $month, $day) {
	$year = (int)$year;
	$month = (int)$month;
	$day = (int)$day;
	return $year.'-'.($month<10?'0':'').$month.'-'.($day<10?'0':'').$day;
}

/*******************************************************************************
	Функции определяет количество дней с начала года по старому стилю
*******************************************************************************/  
function bg_ortev_numYDays ($date) {
	list($year, $month, $day) = explode('-', $date);
	$year = (int)$year;
	$month = (int)$month;
	$day = (int)$day;
	$num = 0;
	for ($m = $month-1; $m > 0; $m--) {
		$num += bg_ortev_numDays ($m, $year);
	}
	return $num + $day;
}
/*******************************************************************************
	Функции определяет количество дней с 1 января от РХ по старому стилю
*******************************************************************************/  
function bg_ortev_numEraDays ($date) {
	list($year, $month, $day) = explode('-', $date);
	$year = (int)$year;
	$month = (int)$month;
	$day = (int)$day;
	// Кол-во дней до 1 января сего года
	$y = $year-1;
	$num = 365*$y+($y-$y%4)/4;
	// + Кол-во дней от 1 января сего года
	for ($m = $month-1; $m > 0; $m--) {
		$num += bg_ortev_numDays ($m, $year);
	}
	return $num + $day;
}

/*******************************************************************************
	Функции определяет день недели даты по старому стилю
	воскресенье = 0 ... суббота = 6
*******************************************************************************/  
function bg_ortev_WeekDay ($date) {
	// Кол-во дней с 1 января от РХ
	$num = bg_ortev_numEraDays ($date)-2;
	return $num%7;
}

/*******************************************************************************
	Функции возвращает название дня недели даты по старому стилю
	воскресенье = 0 ... суббота = 6
*******************************************************************************/  
function bg_ortev_WeekDayName ($wd) {
	$weekdays = array('Вс','Пн','Вт','Ср','Чт','Пт','Сб');
	return $weekdays[$wd];
}